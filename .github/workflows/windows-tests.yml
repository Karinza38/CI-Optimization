name: Windows Tests with Prioritized Failed Tests

on:
  push:
    branches: [main]
  pull_request:
    branches: [main]

jobs:
  test-on-windows:
    runs-on: windows-latest

    steps:
      - name: Check out code
        uses: actions/checkout@v2

      - name: Set up Python
        uses: actions/setup-python@v2
        with:
          python-version: '3.x'

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install pytest pytest-html

      # Restore cache of previously failed tests
      - name: Restore failed test cache
        id: cache-failed-tests
        uses: actions/cache@v3
        with:
          path: failed-tests.txt
          key: failed-tests-${{ github.ref }}

      # Run only previously failed tests if cache exists
      - name: Run prioritized failed tests (if any)
        if: steps.cache-failed-tests.outputs.cache-hit == 'true'
        run: |
          pytest --html=test-reports/prioritized-report.html --self-contained-html --last-failed --last-failed-no-failures all || echo "Some prioritized tests failed"
          if [ $? -ne 0 ]; then
            echo "Stopping workflow due to repeated failures in prioritized tests."
            exit 1
          fi

      # Run all tests if no failed tests were found in the cache
      - name: Run all tests and generate HTML report
        if: steps.cache-failed-tests.outputs.cache-hit != 'true'
        run: |
          mkdir -p test-reports
          pytest --html=test-reports/full-report.html --self-contained-html

      # Save a list of failed tests for future runs
      - name: Save failed test cache
        if: failure()
        run: |
          pytest --last-failed --last-failed-no-failures all --cache-clear --maxfail=1 --disable-warnings
          pytest --collect-only | grep '::' | sed 's/<Module //' > failed-tests.txt
      - uses: actions/upload-artifact@v3
        with:
          name: failed
